package beacondb

import (
	go_fuzz_utils "github.com/trailofbits/go-fuzz-utils"
)

func GetTypeProvider(data []byte) (*go_fuzz_utils.TypeProvider, error) {
	tp, err := go_fuzz_utils.NewTypeProvider(data)
	if err != nil {
		return nil, err
	}
	err = tp.SetParamsStringBounds(0, 1024)
	if err != nil {
		return nil, err
	}
	err = tp.SetParamsSliceBounds(0, 4096)
	if err != nil {
		return nil, err
	}
	err = tp.SetParamsBiases(0, 0, 0, 0)
	if err != nil {
		return nil, err
	}
	return tp, nil
}

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_AddValidator__ because parameters include func, chan, or unsupported interface: ValidatorT

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_AddValidatorBartio__ because parameters include func, chan, or unsupported interface: ValidatorT

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_Context__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_Copy__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetBalance__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetBalances__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetBlockRootAtIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetEth1Data__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetEth1DepositIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetFork__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetGenesisValidatorsRoot__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetLatestBlockHeader__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetLatestExecutionPayloadHeader__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetNextWithdrawalIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetNextWithdrawalValidatorIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetRandaoMixAtIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetSlashingAtIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetSlashings__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetSlot__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetTotalActiveBalances__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetTotalSlashing__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetTotalValidators__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetValidators__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_GetValidatorsByEffectiveBalance__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetBalance__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetEth1Data__ because parameters include func, chan, or unsupported interface: Eth1DataT

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetEth1DepositIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetFork__ because parameters include func, chan, or unsupported interface: ForkT

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetGenesisValidatorsRoot__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetLatestBlockHeader__ because parameters include func, chan, or unsupported interface: BeaconBlockHeaderT

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetLatestExecutionPayloadHeader__ because parameters include func, chan, or unsupported interface: ExecutionPayloadHeaderT

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetNextWithdrawalIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetNextWithdrawalValidatorIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetSlashingAtIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetSlot__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_SetTotalSlashing__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_StateRootAtIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_UpdateBlockRootAtIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_UpdateRandaoMixAtIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_UpdateStateRootAtIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_UpdateValidatorAtIndex__ because parameters include func, chan, or unsupported interface: ValidatorT

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_ValidatorByIndex__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_ValidatorIndexByCometBFTAddress__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_ValidatorIndexByPubkey__ as it appears to be an interface:

// skipping Fuzz_Nosy_KVStore[BeaconBlockHeaderT interface{constraints.Empty[BeaconBlockHeaderT]; constraints.SSZMarshallable}, Eth1DataT interface{constraints.Empty[Eth1DataT]; constraints.SSZMarshallable}, ExecutionPayloadHeaderT interface{NewFromSSZ([]byte, uint32) (ExecutionPayloadHeaderT, error); Version() uint32; constraints.SSZMarshallable}, ForkT interface{constraints.Empty[ForkT]; constraints.SSZMarshallable}, ValidatorT Validator[ValidatorT], ValidatorsT ~[]ValidatorT]_WithContext__ as it appears to be an interface:

// skipping Fuzz_Nosy_Validator[SelfT any]_GetEffectiveBalance__ because parameters include func, chan, or unsupported interface: github.com/berachain/beacon-kit/mod/storage/pkg/beacondb.Validator[SelfT any]

// skipping Fuzz_Nosy_Validator[SelfT any]_GetPubkey__ because parameters include func, chan, or unsupported interface: github.com/berachain/beacon-kit/mod/storage/pkg/beacondb.Validator[SelfT any]

// skipping Fuzz_Nosy_Validator[SelfT any]_IsActive__ because parameters include func, chan, or unsupported interface: github.com/berachain/beacon-kit/mod/storage/pkg/beacondb.Validator[SelfT any]
